# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BudgetAvgAggregate {
  amount: Float
}

type BudgetCountAggregate {
  id: Int!
  engagementId: Int!
  weekEnding: Int!
  amount: Int!
  phase: Int!
  _all: Int!
}

type BudgetMaxAggregate {
  id: String
  engagementId: String
  weekEnding: DateTime
  amount: Float
  phase: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type BudgetMinAggregate {
  id: String
  engagementId: String
  weekEnding: DateTime
  amount: Float
  phase: String
}

type BudgetSumAggregate {
  amount: Float
}

type Budget {
  id: ID!
  engagementId: String!
  weekEnding: DateTime!
  amount: Float!
  phase: String!
  engagement: Engagement!
}

type EngagementCountAggregate {
  id: Int!
  name: Int!
  engagementPartner: Int!
  engagementManager: Int!
  _all: Int!
}

type EngagementCount {
  budgets: Int!
  timesheetEntries: Int!
}

type EngagementMaxAggregate {
  id: String
  name: String
  engagementPartner: String
  engagementManager: String
}

type EngagementMinAggregate {
  id: String
  name: String
  engagementPartner: String
  engagementManager: String
}

type Engagement {
  id: ID!
  name: String!
  engagementPartner: String!
  engagementManager: String!
  budgets: [Budget!]
  timesheetEntries: [TimesheetEntry!]
  _count: EngagementCount!
}

type TimesheetEntryAvgAggregate {
  hourlyRate: Float
  hoursWorked: Float
}

type TimesheetEntryCountAggregate {
  id: Int!
  engagementId: Int!
  hourlyRate: Int!
  hoursWorked: Int!
  weekEnding: Int!
  phase: Int!
  employeeName: Int!
  employeeTitle: Int!
  _all: Int!
}

type TimesheetEntryMaxAggregate {
  id: String
  engagementId: String
  hourlyRate: Float
  hoursWorked: Float
  weekEnding: DateTime
  phase: String
  employeeName: String
  employeeTitle: String
}

type TimesheetEntryMinAggregate {
  id: String
  engagementId: String
  hourlyRate: Float
  hoursWorked: Float
  weekEnding: DateTime
  phase: String
  employeeName: String
  employeeTitle: String
}

type TimesheetEntrySumAggregate {
  hourlyRate: Float
  hoursWorked: Float
}

type TimesheetEntry {
  id: ID!
  engagementId: String!
  hourlyRate: Float!
  hoursWorked: Float!
  weekEnding: DateTime!
  phase: String!
  employeeName: String!
  employeeTitle: String!
  engagement: Engagement!
}

type BudgetBreakdown {
  """Refers to either "this week" or "YTD"""
  period: BudgetReportPeriod

  """Refers to the ID of an engagement"""
  engagementId: String

  """Refers to the phase of an engagement"""
  phase: String

  """
  Refers to the overall cost of the engagement of a phase for the period specified
  """
  cost: Float

  """
  Refers to the overall budget of the engagement of a phase for the period specified
  """
  budget: Float

  """Briefly describes whether we're under or over budget by x dollars"""
  status: String
}

enum BudgetReportPeriod {
  THIS_WEEK
  YTD
}

"""
Useful for displaying all critical info of a budget report for a particular week-ending
"""
type BudgetReport {
  weekEnding: DateTime
  engagementId: String
  engagement: Engagement
  overallBudgetThisWeek: Float
  overallCostThisWeek: Float
  overallStatusThisWeek: String
  budgetBreakdownThisWeek: [BudgetBreakdown!]
  overallBudgetYtd: Float
  overallCostYtd: Float
  overallStatusYtd: String
  budgetBreakdownYtd: [BudgetBreakdown!]
}

type Query {
  getBudgetReport(args: GetBudgetReportArgs!): BudgetReport!
}

input GetBudgetReportArgs {
  weekEnding: DateTime!
  engagementId: String!
}